import java.util.HashMap;

class Solution {
    int countSubstrings(String s, int k) {
        int n = s.length();
        if (k > n) return 0;

        HashMap<Character, Integer> freq = new HashMap<>();
        int count = 0;
        int i = 0, j = 0;  // i = left, j = right

        while (j < n) {
            // Add rightmost character to window
            char rightChar = s.charAt(j);
            freq.put(rightChar, freq.getOrDefault(rightChar, 0) + 1);

            // When window size reaches k
            if (j - i + 1 == k) {
                if (freq.size() == k - 1) count++;  // valid substring

                // Remove leftmost character before sliding
                char leftChar = s.charAt(i);
                freq.put(leftChar, freq.get(leftChar) - 1);
                if (freq.get(leftChar) == 0) freq.remove(leftChar);
                i++;  // move left edge
            }

            j++;  // move right edge
        }

        return count;
    }
}
