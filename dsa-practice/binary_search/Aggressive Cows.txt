You are given an array with unique elements of stalls[], which denote the positions of stalls. You are also given an integer k which denotes the number of aggressive cows. The task is to assign stalls to k cows such that the minimum distance between any two of them is the maximum possible.

Examples:

Input: stalls[] = [1, 2, 4, 8, 9], k = 3
Output: 3
Explanation: The first cow can be placed at stalls[0], 
the second cow can be placed at stalls[2] and 
the third cow can be placed at stalls[3]. 
The minimum distance between cows in this case is 3, which is the largest among all possible ways.

class Solution {
    public int aggressiveCows(int[] stalls, int k) {
        // code here
        Arrays.sort(stalls);
        int result=0;
        int n=stalls.length;
        int low=1;
        int high=stalls[n-1]-stalls[0];
        while(low<=high){
            int mid=low+(high-low)/2;
            int count =1;
            int last=stalls[0];
            for(int i=1;i<n;i++){
                if(stalls[i]-last>=mid){
                    count ++;
                    last=stalls[i];
                }}
                if(count>=k){
                    result=mid;
                    low=mid+1;
                }
                else {
                    high=mid-1;
                }
                
            }
            return result;
        }
    }
