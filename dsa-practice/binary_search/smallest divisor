class Solution {
    int smallestDivisor(int[] arr, int k) {
        int low = 1;
        int high = 0;

        // Find max element in arr to set high boundary
        for (int num : arr) {
            if (num > high) {
                high = num;
            }
        }

        int ans = high;

        while (low <= high) {
            int mid = low + (high - low) / 2;
            int sum = 0;

            for (int num : arr) {
                // ceiling division without floating point
                sum += (num + mid - 1) / mid;
            }

            if (sum <= k) {
                ans = mid;      // mid can be answer, try smaller divisor
                high = mid - 1;
            } else {
                low = mid + 1;  // mid too small, increase divisor
            }
        }

        return ans;
    }
}
