import java.util.*; // Needed for ArrayList

class Solution {
    public int[] sieve(int n) {
        // Step 1: Create a boolean array to mark prime numbers
        boolean[] isPrime = new boolean[n + 1];
        Arrays.fill(isPrime, true); // assume all numbers are prime

        // Step 2: 0 and 1 are not prime
        if (n >= 0) isPrime[0] = false;
        if (n >= 1) isPrime[1] = false;

        // Step 3: Sieve algorithm to mark non-primes
        for (int p = 2; p * p <= n; p++) {
            if (isPrime[p]) {
                for (int i = p * p; i <= n; i += p) {
                    isPrime[i] = false; // mark multiples as not prime
                }
            }
        }

        // Step 4: Collect all primes into a list
        List<Integer> primesList = new ArrayList<>();
        for (int i = 2; i <= n; i++) {
            if (isPrime[i]) primesList.add(i);
        }

        // Step 5: Convert List<Integer> to int[] to return
        int[] primes = new int[primesList.size()];
        for (int i = 0; i < primesList.size(); i++) {
            primes[i] = primesList.get(i);
        }

        return primes; // final array of prime numbers
    }
}
